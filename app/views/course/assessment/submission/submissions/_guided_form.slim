= simple_form_for [current_course, @assessment, @submission], remote: true do |f|
  = f.error_notification
  = hidden_field_tag :step, guided_current_step
  = f.simple_fields_for :answers, guided_current_answer do |base_answer_form|
    = content_tag_for(:div, base_answer_form.object,
      'data-answer-id' => base_answer_form.object.id) do
      = render partial: base_answer_form.object.question, suffix: 'question'
      = render partial: 'course/assessment/answer/answer', object: base_answer_form.object,
        locals: { base_answer_form: base_answer_form }
      - if base_answer_form.object.attempting?
        = f.button :submit, t('common.save')

  - if @submission.attempting? && guided_next_unanswered_question.nil?
    = f.button :submit, t('.finalise'), name: 'submission[finalise]', class: ['btn-danger']

  - unless @submission.attempting?
    = render 'statistics', f: f

  - if @submission.submitted? && can?(:grade, @submission)
    = link_to t('.auto_grade'),
      auto_grade_course_assessment_submission_path(current_course, @submission.assessment,
        @submission), method: :post, class: ['btn', 'btn-info']
    = f.button :submit, t('.publish'), name: 'submission[publish]', class: ['btn-danger']
