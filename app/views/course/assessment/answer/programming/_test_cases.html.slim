- auto_grading = answer.auto_grading ? answer.auto_grading.actable : nil
- answer_test_results_hash = auto_grading ? \
    auto_grading.test_results.map { |result| [result.test_case, result] }.to_h : \
    {}
- is_grader = can?(:grade, answer.answer)
- test_cases_by_type = question.test_cases_by_type

/ Test case results table
h3 = t('.test_cases')

= render partial: 'course/assessment/answer/programming/test_cases_of_type',
  locals: { test_cases: test_cases_by_type['public_test'], type_heading: t('.public'),
            answer_test_results_hash: answer_test_results_hash, is_grader: is_grader }

- if is_grader
  - if test_cases_by_type.key?('private_test') || test_cases_by_type.key?('evaluation_test')
    span.bg-danger.text-danger
      = fa_icon 'exclamation-triangle'.freeze
      =<t('.privacy_warning')

  = render partial: 'course/assessment/answer/programming/test_cases_of_type',
    locals: { test_cases: test_cases_by_type['private_test'], type_heading: t('.private'),
              answer_test_results_hash: answer_test_results_hash, is_grader: is_grader }

  = render partial: 'course/assessment/answer/programming/test_cases_of_type',
    locals: { test_cases: test_cases_by_type['evaluation_test'], type_heading: t('.evaluation'),
              answer_test_results_hash: answer_test_results_hash, is_grader: is_grader }

/ Test failure warning panel display
- failed_test_cases_by_type = arrange_failed_test_cases_by_type(test_cases_by_type,
                                                                answer_test_results_hash)
- test_case = failed_test_cases_by_type['public_test']
- if test_case
  = render partial: 'course/assessment/answer/programming/test_cases_warning_panels',
    locals: { test_case: test_case,
              panel_heading: t('.failed_public_message'),
              test_case_result: answer_test_results_hash[test_case] }
- else
  - test_case = failed_test_cases_by_type['private_test']
  = render partial: 'course/assessment/answer/programming/test_cases_warning_panels',
    locals: { test_case: test_case,
              panel_heading: t('.failed_private_message'),
              test_case_result: answer_test_results_hash[test_case] }

- if is_grader
  - test_case = failed_test_cases_by_type['evaluation_test']
  = render partial: 'course/assessment/answer/programming/test_cases_warning_panels',
    locals: { test_case: test_case,
              panel_heading: t('.failed_evaluation_message'),
              test_case_result: answer_test_results_hash[test_case] }
