- assessment_time = @items_hash[assessment.id].time_for(current_course_user)
- assessment_with_loaded_timeline = @items_hash[assessment.id].actable
// assessment_with_loaded_timeline is passed below since the timeline is already preloaded and will be checked
- can_attempt_assessment = can?(:attempt, assessment_with_loaded_timeline)
= content_tag_for(:tr, assessment, class: time_period_class(assessment_time) + draft_class(assessment))
  th colspan=2
    - if assessment.view_password
      span title=t('.view_password_set')
        => fa_icon 'lock'.freeze
    - unless assessment.published?
      span title=draft_message(assessment)
        => fa_icon 'ban'.freeze
    - if assessment.autograded? && !current_course_user&.student?
      span title=t('.autograded_assessment')
        => fa_icon 'check-circle'.freeze
    - unless current_course_user&.student? && current_course_user&.timeline_algorithm == 'fixed'
      = render partial: 'course/lesson_plan/items/personal_time_boolean_icons', locals: { item: assessment }
    = link_to(format_inline_text(assessment.title),
              course_assessment_path(current_course, assessment))

  - if current_course.gamified?
    td.table-base-exp = assessment.base_exp
  - if show_bonus_attributes?
    td.table-time-bonus-exp
      - if assessment_time.bonus_end_at.present? && assessment.time_bonus_exp > 0
        = assessment.time_bonus_exp
      - else
        = '-'
  - unless current_component_host[:course_achievements_component].nil?
    td.achievement-badge.table-requirement-for
      - achievement_conditionals = @conditional_service.achievement_conditional_for(assessment)
      - achievement_conditionals.each do |achievement|
        = link_to course_achievement_path(current_course, achievement) do
          = display_achievement_badge(achievement)
  td.table-start-attd.table-start-at
    - if assessment_not_started(assessment_time)
      div.condition-not-satisfied data-toggle='tooltip' title="#{t('.assessment_not_started')}"
        = render partial: 'course/lesson_plan/items/personal_or_ref_time',
                 locals: { item: @items_hash[assessment.id], course_user: current_course_user, attribute: :start_at, datetime_format: :short }
    - elsif condition_not_satisfied(can_attempt_assessment, assessment_with_loaded_timeline, assessment_time)
      div.condition-not-satisfied data-toggle='tooltip' title="#{t('.condition_not_satisfied')}"
        = render partial: 'course/lesson_plan/items/personal_or_ref_time',
                 locals: { item: @items_hash[assessment.id], course_user: current_course_user, attribute: :start_at, datetime_format: :short }
    - else
      = render partial: 'course/lesson_plan/items/personal_or_ref_time',
               locals: { item: @items_hash[assessment.id], course_user: current_course_user, attribute: :start_at, datetime_format: :short }
  - if show_bonus_attributes?
    td.table-bonus-cut-off
      - if assessment_time.bonus_end_at.present? && assessment.time_bonus_exp > 0
        = render partial: 'course/lesson_plan/items/personal_or_ref_time',
                 locals: { item: @items_hash[assessment.id], course_user: current_course_user, attribute: :bonus_end_at, datetime_format: :short }
      - else
        = '-'
  - if show_end_at?
    td.table-end-at
      - if assessment_time.end_at.present?
        = render partial: 'course/lesson_plan/items/personal_or_ref_time',
                 locals: { item: @items_hash[assessment.id], course_user: current_course_user, attribute: :end_at, datetime_format: :short }
  td.table-buttons colspan=2
    = render 'assessment_management_buttons', assessment: assessment, can_attempt_assessment: can_attempt_assessment
