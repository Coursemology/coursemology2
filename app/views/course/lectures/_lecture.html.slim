- edit_button_path = [current_course, lecture]
- delete_button_path = [current_course, lecture]

= div_for(lecture, class: time_period_class(lecture) + unread_class(lecture))
  h2.lecture-title
    = format_inline_text(lecture.title)

    - unless lecture.currently_active?
      small title=time_period_message(lecture)
        =< fa_icon 'calendar'.freeze

    div.pull-right
      div.btn-group
        = edit_button(edit_button_path) if can?(:edit, lecture)
        = delete_button(delete_button_path) if can?(:destroy, lecture)

  i.timestamp
    => format_datetime(lecture.start_at)
    ' -
    => format_datetime(lecture.end_at)
    ' by
    = link_to_user(lecture.creator)

  div.content
    = format_html(lecture.content)

  div.access-link
    - link_exists = lecture.instructor_classroom_link.present?
    - is_instructor = can?(:edit, lecture)
    - if lecture.currently_active?
      - if link_exists || is_instructor
        - if link_exists && is_instructor
          = link_to(t('course.lectures.go_to_lecture'),
            lecture.instructor_classroom_link, id: "lec-link-#{lecture.id}", target: '_blank')
        button.gen-access-link.btn.btn-sm.btn-primary id=("lec-#{lecture.course.id}-#{lecture.id}")
          - if link_exists && is_instructor
            = t('course.lectures.refresh_link')
          - else
            = t('course.lectures.get_virtual_lecture_link')
      - else
        i.info = t('course.lectures.waiting_for_instructor')
    - else
      i.info = lecture.ended? ? t('course.lectures.ended') : t('course.lectures.not_started')
