= content_tag_for(:tr, user_role_request, 'data-action' => approve_instance_user_role_request_path(user_role_request), 'data-method' => 'patch')
  = simple_fields_for user_role_request do |f|
    td = user_role_request.user.name
    td = user_role_request.user.email
    td = user_role_request.organization
    td = user_role_request.designation
    td = format_html(user_role_request.reason)
    - if user_role_request.pending?
      td = f.input :role, as: :select, include_blank: false, collection: Instance::UserRoleRequest.roles.keys, label: false
      td = format_datetime(user_role_request.created_at)
      td
        = f.button :submit, id: 'update', title: t('.approve') do
          = fa_icon 'check'.freeze
        = link_to edit_instance_user_role_request_path(user_role_request), class: ['btn', 'btn-warning'], title: t('.reject_with_message') do
          = fa_icon 'envelope'.freeze
        = link_to reject_instance_user_role_request_path(user_role_request), class: ['btn', 'btn-danger'], title: t('.reject'), method: :patch do
          = fa_icon 'trash'.freeze
    - else
      td = user_role_request.role
      td = format_datetime(user_role_request.created_at)
      td = user_role_request.confirmer.name
      td = format_datetime(user_role_request.confirmed_at)
    - if user_role_request.rejected?
      td = format_html(user_role_request.rejection_message) || '-'
