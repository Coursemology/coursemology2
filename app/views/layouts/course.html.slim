- layout = controller.parent_layout(of_layout: 'course') || controller.current_layout
= render within_layout: layout do
  = render_breadcrumbs
  div.course-layout data-course-id=current_course.id
    button.btn.btn-default.collapse#show-sidebar type="button" data-toggle="collapse" data-target="#full-sidebar,#show-sidebar" aria-expanded="false" aria-controls="navbar"
      = fa_icon 'chevron-right'.freeze
    aside.collapse.in#full-sidebar
      div.row
        div.hidden-xs.text-center#course-sidebar-logo
          button.btn.btn-default.pull-left#hide-sidebar type="button" data-toggle="collapse" data-target="#full-sidebar,#show-sidebar" aria-expanded="false" aria-controls="navbar"
            = fa_icon 'chevron-left'.freeze
          = link_to course_path(current_course) do
            = display_course_logo(current_course)
        - if current_course_user.present? && can?(:read, current_course)
          div.col-xs-12.user
            = display_user_image(current_user)
            span#user-sidebar = link_to_user(current_course_user || current_user)
            button.btn.btn-default.navbar-toggle.collapsed.pull-right type="button" data-toggle="collapse" data-target="#course-navigation-sidebar" aria-expanded="false" aria-controls="navbar"
              span.glyphicon.glyphicon-menu-hamburger
          - if current_course_user.student? && current_course.gamified?
            = display_course_user_badge(current_course_user)
      nav.navbar-default role='navigation'
        - if can?(:read, current_course)
          div.sidebar.collapse.navbar-collapse#course-navigation-sidebar
            = sidebar_items(controller.sidebar_items(type: :normal))

            - unless (admin_sidebar_items = controller.sidebar_items(type: :admin)).empty?
              h4#admin-header-sidebar = t('.administration')
              = sidebar_items(admin_sidebar_items)

    div.page-content class=page_class
      = yield

    - if current_course_user && UserNotification.next_unread_popup_for(current_course_user).present?
      #popup-notifier
