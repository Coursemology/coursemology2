- post = @object
- submission_question = post.topic.actable
- course_user = submission_question.submission.course_user
- assessment = submission_question.submission.assessment
- question = submission_question.question
- course = assessment.course
- host = course.instance.host
- question_assessment = assessment.question_assessments.find_by!(question: question)
- category_id = assessment.tab.category.id
- course_user_recipient = course.course_users.find_by(user: @recipient)

- message.subject = t('.subject', course: course.title, topic: "#{assessment.title}: #{question_assessment.display_title}")
- message.subject += ' ' + t('notifiers.course.phantom') if course_user.phantom?
- step = assessment.questions.index(question) + 1

- if course_user_recipient.student?
  = format_html(t('.message',
                  topic: link_to("#{assessment.title}: #{question_assessment.display_title}",
                                edit_course_assessment_submission_url(course, assessment,
                                                                      submission_question.submission,
                                                                      step: step, host: host)),
                  post: post.text_to_email,
                  post_author: post.author_name))
- else
  = format_html(t('.message_staff',
                topic: link_to("#{assessment.title}: #{question_assessment.display_title}",
                               edit_course_assessment_submission_url(course, assessment,
                                                                     submission_question.submission,
                                                                     step: step, host: host)),
                post: post.text_to_email,
                post_author: post.author_name,
                unmark_as_pending: link_to(t('.unmark_as_pending'),
                                           unmark_as_pending_course_topic_url(course, post.topic, token: post.topic.create_token_from_record, host: host))))

br
= render partial: 'layouts/manage_email_subscription',
         locals: { course: course, recipient: @recipient, component: 'assessments' , category_id: category_id, setting: 'new_comment' }
